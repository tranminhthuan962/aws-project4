name: Backend Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  PYTHON_VERSION: 3.10

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Linting Tools and Pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv flake8

      - name: Install dependencies
        run: |
          pipenv install

  test:
    name: Testing
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Testing Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv pytest

      - name: Install dependencies
        run: |
          pipenv install

      - name: Run Backend Tests
        run: |
          pipenv run test
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: [lint, test]
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-eat-1

      - name: Login AWS
        uses: aws-actions/amazon-ecr-login@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-eat-1

      - name: Build and push Docker Image
        run: |
          aws eks --region us-east-1 update-kubeconfig --name project4-cluster
          kubectl get svc
          docker build -t project4-backend .
          docker push 676560186348.dkr.ecr.us-east-1.amazonaws.com/project4-backend:latest
      - name: Deploy to AWS EKS
        run: |
          aws eks --region us-east-1 update-kubeconfig --name project4-cluster
          cd k8s
          kustomize edit set image frontend=676560186348.dkr.ecr.us-east-1.amazonaws.com/project4-backend:latest
          kustomize build | kubectl apply -f -
